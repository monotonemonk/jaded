doctype html
- auto currentUrl = "/";
- auto riskyBusiness = "<b>risky</b>";
<!--[if IE 8]>
html(lang="en", class="lt-ie9")
<![endif]-->
html(lang="en")
	head
		block title
			title Page Title Here
		style
			include style.css
	body.base-css(ng-app="MyApp", ng-controller="CtrlII")
		block content
			- bool some_d_var = true;
			- string some_other_d_var = "woot";
			// this is the displayed content
			p(id="", p-form-hook=some_d_var ? "yes" :"no", marked) This is a paragraph
				| That continues on
				| multiple lines
			ul(isit=some_other_d_var == "woot")
				li.one-css.two-css: a(href!="#"): a(href!="#")!= clickme
			.img-holder
				img.image(src="logo.gif", style={background: "red", padding: "0px"})/
	woot#content1 as2df
		#woot2(class=["c1", "c2"]) as3dfas3df
		woot3(class={active: currentUrl == "/about"})
		block footer
			p Placeholder footer block
- var host = "remotehost";
- var user = var.emptyObject;
if "localhost" == host
	div#foo(data-bar="foo", goot-one)&attributes({"data-cew": "baer", "ng-show": 1234})
		//- include:markdown ./includes/footer.jade
else
	merrrt
unless user.isAnonymous
	p You are logged in
//- :markdown
//- 	### Markdown Need dedent support to parse this
//- 	I often like including markdown documents.
ul
	- import std.conv;
	each index, val in [1:"one",2:"two",3:"three"]
		li= to!string(index) ~": "~ val
- int n=1;
while n < 4
	li= n++

- var friends = 0;
case friends
	when 0
	when 1
		p you have very few friends
	default: p you have #{friends} friends
//- Declaration
mixin list
	ul
		li foo
		li bar
		li baz
//- Use
+list
+list
mixin pet(name)
	li.pet= name
ul
	+pet("cat")
	+pet("dog")
	+pet("pig")
mixin article(title)
	.article
		.article-wrapper
			h1= title
			if block
				block
			else
				p No content provided

+article("Hello world")

+article("Hello world")
	p This is my
	p Amazing article
mixin link(href, name)
	//- attributes == {class: "btn"}
	a(class!=attributes["class"], href=href)= name
+link("/foo", "foo")(class="btn")
mixin link2(href, name)
	a(href=href)&attributes(attributes)= name

+link2("/foo", "foo")(class="btn")
mixin list2(id, ...items)
	ul(id=id)
		each item in items
			li= item

+list2("my-list", 1, 2, 3, 4)

p.
	If you take a look at this page's source #[a(target="_blank", href="https://github.com/jadejs/jade/blob/master/docs/views/reference/interpolation.jade") on GitHub],
	you'll see several places where the tag interpolation operator is
	used like so.
	.quote // this is raw text so the .quote means nothing to jade, only string and tag interpolation works here
		p Joel: !{riskyBusiness}
p.
	This is supposed to just be text inside a p tag.
- import std.uni : toUpper;
- string msg = "not my inside voice";
p This is #{msg.toUpper()} &lt;- #[a(href="#") upper case] characters

// Following is as4df, its the last tag
as4df