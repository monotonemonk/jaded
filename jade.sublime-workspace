{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pt",
				"ParseTree"
			],
			[
				"repli",
				"replicate	function"
			],
			[
				"endOf",
				"endOfInput"
			],
			[
				"endO",
				"endOfLine"
			],
			[
				"endIO",
				"endOfLine"
			],
			[
				"In",
				"Indent"
			],
			[
				"InlineT",
				"InlineText"
			],
			[
				"Tag",
				"TagArgs"
			],
			[
				"TagA",
				"TagArgs"
			],
			[
				"render",
				"renderToken	function"
			],
			[
				"id",
				"id_token"
			],
			[
				"show",
				"showme_id"
			],
			[
				"md-li",
				"md-list-item"
			]
		]
	},
	"buffers":
	[
		{
			"file": "source/app.d",
			"settings":
			{
				"buffer_size": 234,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "html(lang=\"en\")\n	head\n		block title\n			title Page Title Here\n			style\n				include style.css\n	body.base-css(ng-app=\"MyApp\", ng-controller=\"CtrlII\")\n		// this is the displayed content\n		p(id=\"\", p-form-hook=some_d_var ? \"yes\" :\"no\", marked) This is a paragraph\n",
			"file": "views/b.jade",
			"file_size": 259,
			"file_write_time": 130880336613001118,
			"settings":
			{
				"buffer_size": 259,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/jade/package.d",
			"settings":
			{
				"buffer_size": 37,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/jade/base.d",
			"settings":
			{
				"buffer_size": 8080,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "DocType <~ :'doctype ' (! endOfLine .)*\nLine	<-\n	/ Indent Line\n	/  (Include / Extend / Block / Conditional / UnbufferedCode / BufferedCode / Iteration / MixinDecl / Mixin / Case / Tag / PipedText / Comment / RawHtmlTag / Filter / AnyContentLine) (endOfLine / endOfInput)\n	/ endOfLine\nAnyContentLine <~ (! endOfLine .)*\nBlockInATag <- '.'																			# Without making indent and dedent handling block in a tag can't have \"valid\" or even partially valid tags in the raw text\nStringInterpolation <-\n	/ ~('!{' (! '}' .)* '}') InlineText\n	/ ('#[' TagInterpolate ']') InlineText\n	/ ~('#{' (! '}' .)* '}')? InlineText\nTagInterpolate <- Id? (CssId / '.' CssClass)* TagArgs? AndAttributes? SelfCloser? BufferedCode? (:Spacing+ TextStop(']'))?\nTextStop(StopElem) <~ (! StopElem .)*\nMixinDecl <- 'mixin' :Spacing+ DVariableName MixinDeclArgs?\nMixinDeclArgs <- '(' DVariableName (',' :Spacing* DVariableName)* MixinVarArg? ')'\nMixinVarArg <- (',' :Spacing* '...' DVariableName)\nMixin <- '+' DVariableName ('(' :Spacing* (TagParamValue (',' :Spacing* TagParamValue)*)? ')')? TagArgs?\nCase <-\n	/ ^'case' Spacing+ DLineExpression\n	/ ^'when' ~(! (':' / endOfLine / endOfInput) .)* InlineTag?\n	/ ^'default' InlineTag?\nIteration <-\n	/ ('each' / 'for') :Spacing+ DVariableName (',' :Spacing* DVariableName)? :Spacing+ ^'in' :Spacing+ DLineExpression\n	/ 'while' DLineExpression\nDVariableName <~ [A-Za-z][A-Za-z0-9]*\nUnbufferedCode <- '-' DLineExpression*\nBufferedCode <- ^('=' / '!=') DLineExpression*\nConditional <-\n	/ IfBlock\n	/ ('if' / 'unless') DLineExpression\n	/ 'else'\nIfBlock <- 'if' :Spacing+ 'block'\nExtend <- 'extends' FileName\nBlock <- 'block' DLineExpression?\nFilter <- ':' FilterName\nInclude <- :'include' (':' FilterName)? :Spacing+ FileName\nFileName <~ (! endOfLine .)*\nFilterName <; Id\nRawHtmlTag <~ ^'<' (! endOfLine .)*\nTag 	<-\n	/ Id (CssId / '.' CssClass)* TagArgs? AndAttributes? (BlockInATag / SelfCloser? (InlineTag+ BufferedCode / :Spacing+ InlineText StringInterpolation+ / BufferedCode)?)\n	/ (CssId / '.' CssClass)+ TagArgs? AndAttributes? (BlockInATag / SelfCloser? (InlineTag+ BufferedCode / :Spacing+ InlineText StringInterpolation+ / BufferedCode)?)\nComment <- '//' (^'-')? InlineText?\nAndAttributes <- '&' 'attributes' '(' (AttributeJsonObject / ParamDExpression) ')'\nSelfCloser <- '/'\nInlineTag <- ':' :Spacing* Id (CssId / '.' CssClass)* TagArgs? AndAttributes? (BlockInATag / SelfCloser? (:Spacing+ InlineText StringInterpolation+)?)\nId <~ [A-Za-z\\-][A-Za-z\\-0-9]*\nCssClass <~ [A-Za-z\\-][A-Za-z\\-0-9]*\nCssId <~ :'#' Id\nTagArgs <- '(' TagArg (',' :Spacing* TagArg)* ')'\nTagArg <- TagParamKey (^('=' / '!=') TagParamValue)?\nTagParamKey <~ [A-Za-z\\-]+\nTagParamValue <-\n	/ Str\n	/ AttributeJsonObject\n	/ CssClassArray\n	/ ParamDExpression\nParamDExpression <~ (! (',' / ')') .)+\nDLineExpression <~ (! endOfLine .)+\nAttributeJsonObject <- :'{' (JsonKeyValue (:',' :Spacing* JsonKeyValue)*)? :'}'\nJsonKeyValue <- JsonKey :Spacing* ':' :Spacing* JsonObjectDExpression\nJsonKey <~\n	/ :doublequote [A-Za-z\\-][A-Za-z\\-0-9]* :doublequote\n	/ [A-Za-z][A-Za-z0-9]*\nJsonObjectDExpression <~ (! (',' / '}') .)+\nInlineText	<~ (! ('\\r\\n' / \"\\n\" / '#[' / '#{' / '!{') .)*\nPipedText	<~ :'|' (! NewLine .)*\nSpacing	<- (' ' / tab)+\nNewLine <: ('\\r\\n' / '\\n')+ # Used <: to make sure this is not in the ParseTree, also left ^ off the brackets to leave the newline chars out\nStr	<- :doublequote ~(Char*) :doublequote\nCssClassArray <- '[' doublequote CssClass doublequote (',' :Spacing* doublequote CssClass doublequote)* ']'\nChar <- !doublequote . # Anything but a double quote\nIndent  <~ tab+\n",
			"settings":
			{
				"buffer_size": 3585,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "9: Jade.Line [184, 259][\"p\", \"(\", \"id\", \"=\", \",\", \"p-form-hook\", \"=\", \"some_d_var ? \\\"yes\\\" :\\\"no\\\"\", \",\", \"marked\", \")\", \"This is a paragraph\"]\n +-Jade.Tag [184, 258][\"p\", \"(\", \"id\", \"=\", \",\", \"p-form-hook\", \"=\", \"some_d_var ? \\\"yes\\\" :\\\"no\\\"\", \",\", \"marked\", \")\", \"This is a paragraph\"]\n    +-Jade.Id [184, 185][\"p\"]\n    +-Jade.TagArgs [185, 238][\"(\", \"id\", \"=\", \",\", \"p-form-hook\", \"=\", \"some_d_var ? \\\"yes\\\" :\\\"no\\\"\", \",\", \"marked\", \")\"]\n    |  +-Jade.TagArg [186, 191][\"id\", \"=\"]\n    |  |  +-Jade.TagParamKey [186, 188][\"id\"]\n    |  |  +-keywords!(\"=\", \"!=\") [188, 189][\"=\"]\n    |  +-Jade.TagArg [193, 229][\"p-form-hook\", \"=\", \"some_d_var ? \\\"yes\\\" :\\\"no\\\"\"]\n    |  |  +-Jade.TagParamKey [193, 204][\"p-form-hook\"]\n    |  |  +-keywords!(\"=\", \"!=\") [204, 205][\"=\"]\n    |  |  +-Jade.TagParamValue [205, 229][\"some_d_var ? \\\"yes\\\" :\\\"no\\\"\"]\n    |  |     +-Jade.ParamDExpression [205, 229][\"some_d_var ? \\\"yes\\\" :\\\"no\\\"\"]\n    |  +-Jade.TagArg [231, 237][\"marked\"]\n    |     +-Jade.TagParamKey [231, 237][\"marked\"]\n    +-Jade.InlineText [239, 258][\"This is a paragraph\"]\n",
			"settings":
			{
				"buffer_size": 1070,
				"line_ending": "Unix",
				"name": "9: Jade.Line [184, 259][\"p\", \"(\", \"id\", \"=\", \",\","
			}
		},
		{
			"file": "source/jade/pegged.d",
			"settings":
			{
				"buffer_size": 5287,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "d",
		"selected_items":
		[
			[
				"d",
				"Set Syntax: D"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"jade",
				"Set Syntax: Jade"
			],
			[
				"jad",
				"Set Syntax: Jade"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"dkit",
				"DKit: Restart DCD Autocompletion Server"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/rmcguire/Projects/jade",
		"/home/rmcguire/Projects/jade/source",
		"/home/rmcguire/Projects/jade/source/jade",
		"/home/rmcguire/Projects/jade/views"
	],
	"file_history":
	[
		"/home/rmcguire/Projects/examples/opengl/argb_window.c",
		"/mnt/home/rmcguire/.profile",
		"/home/rmcguire/.profile",
		"/home/rmcguire/Documents/Programming/go/src/google.golang.org/api/admin/reports/v1/admin-gen.go",
		"/home/rmcguire/Projects/jade/source/jade/pegged.d",
		"/home/rmcguire/Projects/jade/dub.json",
		"/home/rmcguire/test.html",
		"/home/rmcguire/materiald/views/material_base.dt",
		"/home/rmcguire/materiald/views/material_sidenav.dt",
		"/home/rmcguire/materiald/views/app.js",
		"/home/rmcguire/materiald/source/app.d",
		"/home/rmcguire/materiald/views/app.css",
		"/home/rmcguire/materiald/views/quick_settings_panel.dt",
		"/home/rmcguire/materiald/views/material_list.dt",
		"/home/rmcguire/materiald/views/material_menubar.jade",
		"/home/rmcguire/materiald/views/material_dropdown_menu.dt",
		"/home/rmcguire/materiald/views/test.dt",
		"/home/rmcguire/.dub/packages/vibe-d-0.7.24/source/vibe/templ/diet.d",
		"/home/rmcguire/materiald/views/material_toolbar.dt",
		"/home/rmcguire/materiald/views/material_base_toolbar.dt",
		"/home/rmcguire/materiald/public/css/app.css",
		"/home/rmcguire/materiald/public/js/app.js",
		"/home/rmcguire/materiald/views/test.js",
		"/home/rmcguire/materiald/views/test.css",
		"/home/rmcguire/materiald/views/material_dependencies.dt",
		"/home/rmcguire/materiald/views/test.html",
		"/home/rmcguire/materiald/dub.json",
		"/home/rmcguire/.dub/packages/dlib-master/dub.json",
		"/home/rmcguire/.dub/packages/gl3n-1.0.1/dub.json",
		"/home/rmcguire/.dub/packages/gl3n-1.0.1/gl3n/linalg.d",
		"/home/rmcguire/.dub/packages/dlib-master/dlib/container/dict.d",
		"/home/rmcguire/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/rmcguire/.config/sublime-text-3/Installed Packages/Material-Theme.sublime-theme",
		"/home/rmcguire/.config/sublime-text-3/Packages/User/DKit.sublime-settings",
		"/home/rmcguire/.config/sublime-text-3/Packages/DKit/DKit.sublime-settings",
		"/home/rmcguire/.config/sublime-text-3/Packages/GoSublime/CHANGELOG.md",
		"/home/rmcguire/.config/sublime-text-3/Packages/GoSublime/USAGE.md"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Line",
			"nextLine",
			"p.",
			"line_number",
			"sinclude",
			"t) {\n		return ",
			"line_number, render",
			", ",
			" / ",
			";\n",
			"rawMode",
			"isHtml5",
			"!isBoolean",
			"tagarg.type",
			"tagarg.ch",
			"ParseTree",
			"line_number,",
			"rend",
			":",
			"ret~\"",
			"Line",
			" Line",
			", indent",
			"%d ",
			"lineNumber",
			"last_indent",
			"tagDepth, ",
			", tagDepth~\"\\t\"",
			"{line",
			"line",
			"last_indent",
			"p.children",
			"Indent*",
			"Indent",
			"\"base_page.jade\"",
			"BufferedCode",
			"'[",
			"base_page",
			"Str",
			"InlineText",
			"StringInterpolation",
			"InlineText",
			"BlockInATag",
			"(SelfCloser?",
			" / BlockInATag)",
			"SelfCloser?",
			".",
			"'.'",
			"GO",
			"'+",
			"DVariableName",
			"DVariable",
			"(InlineTag /",
			"DLineExpression",
			"Block",
			"IncludeFileName",
			"Tag / PipedText",
			"StyleJsonKeyValue",
			"'\"'",
			"TagArgs",
			"TagArgs?",
			"StyleJsonObject",
			"('.' CssClass)+",
			"Id ('.' CssClass)*",
			"DExpression",
			"StringArray",
			"JsonKeyValue",
			"JsonObject",
			"MultiLineText",
			"Text",
			"TagParam",
			"TagArgValue",
			"TagCss*",
			"singlequote",
			"TagName",
			"identifier",
			"tag",
			"Tag",
			"tag",
			"Tag",
			"tag",
			"Tag",
			"tag",
			"Tag",
			"tag",
			"Tag",
			"tag",
			"ret",
			";",
			"; ",
			"d; ",
			" margin:0px; padding:0px;",
			"margin:0px; padding:0px;",
			"<md-subheader",
			"</md-divider>",
			"\" ",
			">",
			"-",
			"></script>",
			"side",
			"33, 33, 33",
			"33,33,33",
			"38, 50, 56",
			"Darker"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/app.d",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 234,
						"regions":
						{
						},
						"selection":
						[
							[
								231,
								231
							]
						],
						"settings":
						{
							"color_scheme": "Packages/Material Theme/schemes/Material-Theme.tmTheme",
							"syntax": "Packages/D/D.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "views/b.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 259,
						"regions":
						{
						},
						"selection":
						[
							[
								182,
								182
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "source/jade/package.d",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37,
						"regions":
						{
						},
						"selection":
						[
							[
								32,
								32
							]
						],
						"settings":
						{
							"color_scheme": "Packages/Material Theme/schemes/Material-Theme.tmTheme",
							"syntax": "Packages/D/D.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/jade/base.d",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8080,
						"regions":
						{
						},
						"selection":
						[
							[
								7462,
								7462
							]
						],
						"settings":
						{
							"color_scheme": "Packages/Material Theme/schemes/Material-Theme.tmTheme",
							"syntax": "Packages/D/D.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2691.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3585,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"default_dir": "/home/rmcguire/Projects/jade",
							"syntax": "Packages/D/D.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1070,
						"regions":
						{
						},
						"selection":
						[
							[
								579,
								579
							]
						],
						"settings":
						{
							"auto_name": "9: Jade.Line [184, 259][\"p\", \"(\", \"id\", \"=\", \",\",",
							"default_dir": "/home/rmcguire/Projects/jade",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "source/jade/pegged.d",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5287,
						"regions":
						{
						},
						"selection":
						[
							[
								447,
								453
							]
						],
						"settings":
						{
							"syntax": "Packages/D/D.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 64.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.MarGo-output":
	{
		"height": 150.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "jade.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/grove_admin/grove_admin.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 220.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
