Performing "debug" build using dmd for x86_64.
pegged 0.2.1: target for configuration "library" is up to date.
jade ~master: building configuration "application"...
Linking...
To force a rebuild of up-to-date targets, run again with --force.
Running ./jade 
runtime:
==========
==========
1:  // // Comment ["//", "-", " index.jade", "\n"]
2:  // // Comment ["//", "-", " extends ./base_layout.jade", "\n"]
3: // empty line
4:  indent:0 tag:[["id:doctype", "inlineText:html"]] 3
5:  <!--[if IE 8]> // RawHtmlTag ["<!--[if IE 8]>", "\n"]
6:  indent:0 tag:[["id:html", "tagArgs:lang=en, class=lt-ie9"]] 11
7:  <![endif]--> // RawHtmlTag ["<![endif]-->", "\n"]
8:  indent:0 tag:[["id:html", "tagArgs:lang=en"]] 7
9:  indent:1 tag:[["id:head"]] 2
10: 		 block // Block ["block", " title", "\n"]
11:  indent:3 tag:[["id:title", "inlineText:Page Title Here"]] 3
12:  indent:3 tag:[["id:style"]] 2
13: 				include style.css// include file ["style.css", "\n"]
14:  indent:1 tag:[["id:body", "cssClass:base-css", "tagArgs:ng-app=MyApp, ng-controller=CtrlII"]] 13
15: 		 // // Comment ["//", " this is the displayed content", "\n"]
16:  indent:2 tag:[["id:p", "tagArgs:id=, p-form-hook=some_d_var ? \"yes\" :\"no\", marked", "inlineText:This is a paragraph"]] 13
17: 			  That continues on // PipedText [" That continues on", "\n"]
18: 			  multiple lines // PipedText [" multiple lines", "\n"]
19:  indent:2 tag:[["id:ul", "tagArgs:isit=some_other_d_var == \"woot\""]] 7
20:  indent:3 tag:[["id:li", "cssClass:one-css", "cssClass:two-css", "inlineTag: indent:3 tag:[[\"id:a\", \"tagArgs:href!=#\"]] 7", "inlineTag: indent:3 tag:[[\"id:a\", \"tagArgs:href!=#\"]] 7", "bufferedCode:!= clickme"]] 22
21:  indent:2 tag:[["cssClass:img-holder"]] 3
22:  indent:3 tag:[["id:img", "cssClass:image", "tagArgs:src=logo.gif, style=background", "selfcloser:true"]] 19
23:  indent:1 tag:[["id:woot", "cssId:content1", "inlineText:asdf"]] 4
24:  indent:2 tag:[["cssId:woot2", "tagArgs:class=[", "inlineText:asdfasdf"]] 16
25:  indent:2 tag:[["id:woot3", "tagArgs:class=active"]] 9
26:  - // UnbufferedCode ["-", " var localhost = \"remotehost\"", "\n"]
27:  - // UnbufferedCode ["-", " var user = {}", "\n"]
28:  if // Conditional ["if", " \"localhost\" == host", "\n"]
29:  indent:1 tag:[["id:div", "cssId:foo", "tagArgs:data-bar=foo, goot-one", "andAttributes:data-cew:\"baer\", ng-show:1234"]] 20
30: 		 // // Comment ["//", "-", " include:markdown ./includes/footer.jade", "\n"]
31:  else // Conditional ["else", "\n"]
32:  indent:1 tag:[["id:merrrt"]] 2
33:  unless // Conditional ["unless", " !user.isAnonymous", "\n"]
34:  indent:1 tag:[["id:You", "inlineText:are logged in"]] 3
35:  // // Comment ["//", "-", " :markdown", "\n"]
36:  // // Comment ["//", "-", " \t### Markdown Need dedent support to parse this", "\n"]
37:  // // Comment ["//", "-", " \tI often like including markdown documents.{", "\n"]
38:  } // AnyContentLine ["}", "\n"]
39:  indent:0 tag:[["id:ul"]] 2
40: 	 each // Iteration ["each", "val", ",", "index", "in", "{1:'one',2:'two',3:'three'}", "\n"]
41:  indent:2 tag:[["id:li", "bufferedCode:= index + ': ' + val"]] 4
42:  while // Iteration ["while", " n < 4", "\n"]
43:  indent:1 tag:[["id:li", "bufferedCode:= n++"]] 4
44: 	// empty line
45:  - // UnbufferedCode ["-", " var friends = 0", "\n"]
46:  case // Case ["case", " ", "friends", "\n"]
47: 	 when // Case ["when", " 0", "\n"]
48: 	 when // Case ["when", " 1", "\n"]
49:  indent:2 tag:[["id:p", "inlineText:you have very few friends"]] 3
50: 	 default // Case ["default", ":", "p", "you have ", "#{", "friends", " friends", "\n"]
51:  // // Comment ["//", "-", " Declaration", "\n"]
52:  mixin // MixinDecl ["mixin", "list", "\n"]
53:  indent:1 tag:[["id:ul"]] 2
54:  indent:2 tag:[["id:li", "inlineText:foo"]] 3
55:  indent:2 tag:[["id:li", "inlineText:bar"]] 3
56:  indent:2 tag:[["id:li", "inlineText:baz"]] 3
57:  // // Comment ["//", "-", " Use", "\n"]
58:  + // Mixin ["+", "list", "\n"]
59:  + // Mixin ["+", "list", "\n"]
60:  mixin // MixinDecl ["mixin", "pet", "(", "name", ")", "\n"]
61:  indent:1 tag:[["id:li", "cssClass:pet", "bufferedCode:= name"]] 6
62:  indent:0 tag:[["id:ul"]] 2
63: 	 + // Mixin ["+", "pet", "(", "cat", ")", "\n"]
64: 	 + // Mixin ["+", "pet", "(", "dog", ")", "\n"]
65: 	 + // Mixin ["+", "pet", "(", "pig", ")", "\n"]
66:  mixin // MixinDecl ["mixin", "article", "(", "title", ")", "\n"]
67:  indent:1 tag:[["cssClass:article"]] 3
68:  indent:2 tag:[["cssClass:article-wrapper"]] 3
69:  indent:3 tag:[["id:h1", "bufferedCode:= title"]] 4
70: 			 if // Conditional ["if", "block", "\n"]
71: 				 block // Block ["block", "\n"]
72: 			 else // Conditional ["else", "\n"]
73:  indent:4 tag:[["id:p", "inlineText:No content provided"]] 3
74: 				// empty line
75:  + // Mixin ["+", "article", "(", "'Hello world'", ")", "\n"]
76: 				// empty line
77:  + // Mixin ["+", "article", "(", "'Hello world'", ")", "\n"]
78:  indent:1 tag:[["id:p", "inlineText:This is my"]] 3
79:  indent:1 tag:[["id:p", "inlineText:Amazing article"]] 3
80:  mixin // MixinDecl ["mixin", "link", "(", "href", ",", "name", ")", "\n"]
81: 	 // // Comment ["//", "-", " attributes == {class: \"btn\"}", "\n"]
82:  indent:1 tag:[["id:a", "tagArgs:class!=attributes.class, href=href", "bufferedCode:= name"]] 13
83:  + // Mixin ["+", "link", "(", "'/foo'", ",", "'foo'", ")", "(", "class", "=", "btn", ")", "\n"]
84:  mixin // MixinDecl ["mixin", "link", "(", "href", ",", "name", ")", "\n"]
85:  indent:1 tag:[["id:a", "tagArgs:href=href", "andAttributes:attributes", "bufferedCode:= name"]] 14
86: 	// empty line
87:  + // Mixin ["+", "link", "(", "'/foo'", ",", "'foo'", ")", "(", "class", "=", "btn", ")", "\n"]
88:  mixin // MixinDecl ["mixin", "list", "(", "id", ",", "...", "items", ")", "\n"]
89:  indent:1 tag:[["id:ul", "tagArgs:id=id"]] 7
90: 		 each // Iteration ["each", "item", "in", "items", "\n"]
91:  indent:3 tag:[["id:li", "bufferedCode:= item"]] 4
92: 			// empty line
93:  + // Mixin ["+", "list", "(", "'my-list'", ",", "1", ",", "2", ",", "3", ",", "4", ")", "\n"]
94: 			// empty line
95: hasBlock indent:0 tag:[["id:p", "block:Jade.BlockInATag"]] 5
96: hasBlock indent:0 tag:[["id:p", "block:Jade.BlockInATag"]] 5
97:  - // UnbufferedCode ["-", " var msg = {toUpperCase: function () {}}", "\n"]
98:  indent:0 tag:[["id:p", "inlineText:This is ", "stringInterpolation:escape:[\"msg.toUpperCase()\"] // EscapedStringInterpolation", "inlineText: <- ", "stringInterpolation:tag: indent:0 tag:[[\"id:a\", \"tagArgs:href=#\", \"default:Jade.TextStop!(literal!(\\\"]\\\"))\"]] 7 // TagInterpolation", "inlineText: characters"]] 16
99: 			// empty line
100:  // // Comment ["//", "-", " Following is asdf, its the last tag", "\n"]
101:  indent:0 tag:[["id:asdf"]] 2


