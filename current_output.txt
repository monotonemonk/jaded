Performing "debug" build using dmd for x86_64.
jsvar ~master: target for configuration "library" is up to date.
pegged 0.2.1: target for configuration "library" is up to date.
jade ~master: target for configuration "application" is up to date.
To force a rebuild of up-to-date targets, run again with --force.
Running ./jade 
templates count: 1
compileTime render:
<ul1><li>foo</li><li>bar</li><li>baz</li></ul1><ul1><li>foo</li><li>bar</li><li>baz</li></ul1><ul2><li class="pet"></li><li class="pet"></li><li class="pet"></li></ul2><ul3 id=id><!-- 2 Jade.Iteration depth:2 --><li></li></ul3><a class=attributes.class href=href></a><div class="article"><div class="article-wrapper"><h1><block></block></h1></div></div><div class="article"><div class="article-wrapper"><h1><block></block></h1></div></div>
runtime:
not extended

/** jade template: mixins.jade 36 */
import std.array : appender;
auto buf = appender!string;
void JadeMixin_list(Attributes, BlockT)(Attributes attributes, BlockT block) {
buf ~= `<ul1>`;
buf ~= `<li>foo</li>`;
buf ~= `<li>bar</li>`;
buf ~= `<li>baz</li>`;
buf ~= `</ul1>`;
}
JadeMixin_list(var.emptyObject(), () { auto buf = appender!string;return buf.data; });
JadeMixin_list(var.emptyObject(), () { auto buf = appender!string;return buf.data; });
void JadeMixin_pet(Attributes, BlockT, Name)(Attributes attributes, BlockT block, Name name) {
buf ~= `<li class="pet"></li>`;
}
buf ~= `<ul2>`;
JadeMixin_pet(var.emptyObject(), () { auto buf = appender!string;return buf.data; },"cat");
JadeMixin_pet(var.emptyObject(), () { auto buf = appender!string;return buf.data; },"dog");
JadeMixin_pet(var.emptyObject(), () { auto buf = appender!string;return buf.data; },"pig");
buf ~= `</ul2>`;
void JadeMixin_list2(Attributes, BlockT, Id, Items...)(Attributes attributes, BlockT block, Id id, Items items) {
buf ~= `<ul3 id=id>`;
buf ~= `<!-- 2 Jade.Iteration depth:2 -->`;
buf ~= `<li></li>`;
buf ~= `</ul3>`;
}
JadeMixin_list2(var.emptyObject(), () { auto buf = appender!string;return buf.data; },"my-list", 1, 2, 3, 4);
void JadeMixin_link(Attributes, BlockT, Href, Name)(Attributes attributes, BlockT block, Href href, Name name) {
buf ~= `<a class=attributes.class href=href></a>`;
}
JadeMixin_link(var("class", "btn"), () { auto buf = appender!string;return buf.data; },"/foo", "foo");
void JadeMixin_article(Attributes, BlockT, Title)(Attributes attributes, BlockT block, Title title) {
buf ~= `<div class="article">`;
buf ~= `<div class="article-wrapper">`;
buf ~= `<h1>`;
if (block) {
buf ~= `<block></block>`;
}
 else {
buf ~= `<p>No content provided</p>`;
}
buf ~= `</h1>`;
buf ~= `</div>`;
buf ~= `</div>`;
}
JadeMixin_article(var.emptyObject(), () { auto buf = appender!string;return buf.data; },"Hello world");
JadeMixin_article(var.emptyObject(), () { auto buf = appender!string;
buf ~= `<p>This is my</p>`;

buf ~= `<p>Amazing article</p>`;
return buf.data; },"Hello world");
